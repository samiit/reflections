How did viewing a diff between two versions of a file help you see the bug that was introduced?
-> It helped to precisely see the places where the changes were made, which caused the bug. Beyond that, by comparing the known changes for 'space' replacing the 'enter', I spotted the typo in 'spacr'.

How could having easy access to the entire history of a file make you a more efficient programmer in the long term?
-> Tracking the entire history would help spot bugs if the code stops working after some change. Besides, it helps to reflect on the development of the code - bug fixes, feature additions, etc.

What do you think are the pros and cons of manually choosing when to create a commit, like you do in Git, vs having versions automatically saved, like Google Docs does?
-> Pros: Better suited for code, since the user gets the power to commit when he (the developer/creator) is sure a bug is fixed or a feature is added or code is made more readable/compact. You therefore, retain only working versions of the code.
Cons: For ill trained/amateur/lazy users, might very well forget to commit and would be glad for automatic saving, which might of course result in too many non-working committed codes!

Why do you think some version control systems, like Git, allow saving multiple files in one commit, while others, like Google Docs, treat each file separately?
Git focusses on code than documents. In code, it is more probable that multiple files are connected, through shared functions (definition in one, call in the other).

How can you use the commands git log and git diff to view the history of files?
-> "git log" gives the entire history of commits, which can be used to mark the commit IDs needed to be compared with "git diff". The latter command then displays the inserted lines.

How might using version control make you more confident to make changes that could break something?
-> Version control ensures that I can revert back to the version (commit) which was stable at any point. I can track the bugs that break the code execution in this way, as to when it happened, if it happens!

Now that you have your workspace set up, what do you want to try using Git for?
-> Version control of coding projects, report, and many other things.